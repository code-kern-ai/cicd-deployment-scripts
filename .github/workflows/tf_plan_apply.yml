name: 'OpenTofu Plan/Apply'

on:
  workflow_call:

# Special permissions required for OIDC authentication
permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  tofu-plan:
    name: 'OpenTofu Plan'
    runs-on: ubuntu-latest
    environment: dev
    env:
      #this is needed since we are running tofu with read-only permissions
      ARM_SKIP_PROVIDER_REGISTRATION: true
      ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
      ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
      ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"
      ARM_USE_OIDC: true
      TF_DESTROY: "${{ vars.TF_DESTROY }}"
    outputs:
      tfplanExitCode: ${{ steps.tf-plan.outputs.exitcode }}

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4

    # Install the latest version of the OpenTofu CLI
    - name: Setup OpenTofu
      uses: opentofu/setup-opentofu@v1
      with:
        tofu_wrapper: false

    - name: GitHub Configuration
      run: git config --global url."https://oauth2:${{ secrets.GITHUB_TOKEN }}@github.com".insteadOf https://github.com

    # Initialize a new or existing OpenTofu working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: OpenTofu Init
      run: tofu init

    # Checks that all OpenTofu configuration files adhere to a canonical format
    # Will fail the build if not
    # - name: OpenTofu Format
    #   run: tofu fmt -check

    # Generates an execution plan for OpenTofu
    # An exit code of 0 indicated no changes, 1 a tofu failure, 2 there are pending changes.
    - name: OpenTofu Plan
      id: tf-plan
      run: |
        export exitcode=0

        if [ -f vars-dev.tfvars ]; then
          tofu plan $TF_DESTROY -detailed-exitcode -var-file vars-dev.tfvars -out tfplan || export exitcode=$?
        else
          tofu plan $TF_DESTROY -detailed-exitcode -out tfplan || export exitcode=$?
        fi

        echo "exitcode=$exitcode" >> $GITHUB_OUTPUT
        
        if [ $exitcode -eq 1 ]; then
          echo OpenTofu Plan Failed!
          exit 1
        else 
          exit 0
        fi
        
    # Save plan to artifacts  
    - name: Publish OpenTofu Plan
      uses: actions/upload-artifact@v4
      with:
        name: tfplan
        path: tfplan
        
    # Create string output of OpenTofu Plan
    - name: Create String Output
      id: tf-plan-string
      run: |
        OPENTOFU_PLAN=$(tofu show tfplan)
        
        delimiter="$(openssl rand -hex 8)"
        echo "summary<<${delimiter}" >> $GITHUB_OUTPUT
        echo "## OpenTofu Plan Output" >> $GITHUB_OUTPUT
        echo "<details><summary>Click to expand</summary>" >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        echo '```terraform' >> $GITHUB_OUTPUT
        echo "$OPENTOFU_PLAN" >> $GITHUB_OUTPUT
        echo '```' >> $GITHUB_OUTPUT
        echo "</details>" >> $GITHUB_OUTPUT
        echo "${delimiter}" >> $GITHUB_OUTPUT
        
    # Publish OpenTofu Plan as task summary
    # - name: Publish OpenTofu Plan to Task Summary
    #   env:
    #     SUMMARY: ${{ steps.tf-plan-string.outputs.summary }}
    #   run: |
    #     echo "$SUMMARY" >> $GITHUB_STEP_SUMMARY
      
    # If this is a PR post the changes
    - name: Push OpenTofu Output to PR
      if: github.ref != 'refs/heads/main' && github.event_name == 'pull_request'
      uses: actions/github-script@v6
      env:
        SUMMARY: "${{ steps.tf-plan-string.outputs.summary }}"
      with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const body = `${process.env.SUMMARY}`;
            github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: body
            })
                
  tofu-apply:
    name: 'OpenTofu Apply'
    if: github.ref == 'refs/heads/dev' && needs.tofu-plan.outputs.tfplanExitCode == 2
    runs-on: ubuntu-latest
    environment: dev
    env:
      #this is needed since we are running tofu with read-only permissions
      ARM_SKIP_PROVIDER_REGISTRATION: true
      ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
      ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
      ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"
      ARM_USE_OIDC: true
      TF_DESTROY: "${{ vars.TF_DESTROY }}"
    needs: [tofu-plan]
    
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4

    # Install the latest version of OpenTofu CLI and configure the OpenTofu CLI configuration file with a OpenTofu Cloud user API token
    - name: Setup OpenTofu
      uses: opentofu/setup-opentofu@v1

    - name: GitHub Configuration
      run: git config --global url."https://oauth2:${{ secrets.GITHUB_TOKEN }}@github.com".insteadOf https://github.com


    # Initialize a new or existing OpenTofu working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: OpenTofu Init
      run: tofu init

    # Download saved plan from artifacts  
    - name: Download OpenTofu Plan
      uses: actions/download-artifact@v4
      with:
        name: tfplan

    # OpenTofu Apply
    - name: OpenTofu Apply
      run: tofu apply $TF_DESTROY -auto-approve tfplan