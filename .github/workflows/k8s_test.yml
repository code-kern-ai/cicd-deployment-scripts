name: 'K8: Test'

on:
  workflow_call:
    inputs:
      test_cmd:
        description: 'Test Command'
        required: true
        type: string

# Special permissions required for OIDC authentication
permissions:
  id-token: write
  contents: read
  actions: read

jobs:
  az-acr-push:
    name: "Docker: Build & Push"
    runs-on: ubuntu-latest
    environment: dev
    env:
      AZURE_CONTAINER_REGISTRY: ${{ vars.AZURE_CONTAINER_REGISTRY }}
      ACR_LOGIN_USERNAME: ${{ secrets.ACR_LOGIN_USERNAME }}
      ACR_LOGIN_PASSWORD: ${{ secrets.ACR_LOGIN_PASSWORD }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3      
      - name: Log into registry
        uses: docker/login-action@v3
        with:
          registry: "${{ env.AZURE_CONTAINER_REGISTRY }}"
          username: "${{ env.ACR_LOGIN_USERNAME }}"
          password: "${{ env.ACR_LOGIN_PASSWORD }}"
      
      - name: Build & Push
        uses: docker/build-push-action@v5
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          file: 'dev.Dockerfile'
          tags: ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ github.event.repository.name }}:test-${{ github.head_ref }}
          push: true
          build-args: platform=linux/amd64
  
  k8-test:
    name: 'K8: Test'
    runs-on: ubuntu-latest
    needs: [az-acr-push]
    environment: dev
    env:
      KUBELOGIN_VERSION: "v0.0.25"
      KUBERNETES_CLUSTER_NAME: "${{ vars.KUBERNETES_CLUSTER_NAME }}"
      KUBERNETES_NAMESPACE: "${{ vars.KUBERNETES_NAMESPACE }}"
      KUBERNETES_MANIFEST_PATH: "${{ vars.KUBERNETES_MANIFEST_PATH }}"
      AZURE_RESOURCE_GROUP: "${{ vars.AZURE_RESOURCE_GROUP }}"
      AZURE_CONTAINER_REGISTRY: "${{ vars.AZURE_CONTAINER_REGISTRY }}"
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4

    - name: GitHub Configuration
      run: git config --global url."https://oauth2:${{ secrets.TOKEN_GITHUB }}@github.com".insteadOf https://github.com

    - name: Clone cicd-deployment-scripts
      run: git clone https://github.com/code-kern-ai/cicd-deployment-scripts.git

    # Install the latest version of Kubernetes CLI and configure the Kubernetes CLI configuration file with a Kubernetes Cloud user API token
    - name: Azure Cloud Login
      uses: Azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    # Use kubelogin to configure your kubeconfig for Azure auth
    - name: Set up kubelogin for non-interactive login
      uses: azure/use-kubelogin@v1
      with:
        kubelogin-version: ${{ env.KUBELOGIN_VERSION }}

    - uses: azure/aks-set-context@v3
      with:
        resource-group: ${{ env.AZURE_RESOURCE_GROUP }}
        cluster-name: ${{ env.KUBERNETES_CLUSTER_NAME }}
        admin: 'false'
        use-kubelogin: 'true'
    
    - name: Run Test
      shell: bash
      run: |
        bash cicd-deployment-scripts/k8s/test.sh \
          -n ${{ env.KUBERNETES_NAMESPACE }} \
          -d ${{ github.event.repository.name }} \
          -h ${{ github.head_ref }} \
          -r ${{ env.AZURE_CONTAINER_REGISTRY }} \
          -t ${{ inputs.test_cmd }}
