name: 'K8: Test'

on:
  workflow_call:
    inputs:
      test_cmd:
        description: 'Test Command'
        required: true
        type: string

# Special permissions required for OIDC authentication
permissions:
  id-token: write
  contents: read
  actions: read

jobs:
  call-az-acr-push-test:
    uses: code-kern-ai/cicd-deployment-scripts/.github/workflows/az_acr_test.yml@dev
    secrets: inherit
  
  # call-gh-wait-workflow:
  #   uses: code-kern-ai/cicd-deployment-scripts/.github/workflows/gh_wait_workflow.yml@dev
  #   secrets: inherit
  
  # call-k8-db-upgrade:
  #   uses: code-kern-ai/cicd-deployment-scripts/.github/workflows/k8s_db_upgrade.yml@dev
  #   needs: [call-az-acr-push-test, call-gh-wait-workflow]
  #   if: ${{ vars.ENABLE_ALEMBIC_MIGRATIONS == 'true' }}
  #   secrets: inherit
  #   with:
  #     alembic_upgrade_rev: 'head'
  #     docker_image_tag: ${{ needs.call-az-acr-push-test.outputs.GH_REF_NAME }}

  k8-test:
    name: 'K8: Test'
    runs-on: [self-hosted, dev]
    needs: [call-az-acr-push-test]
    if: ${{ !failure() && !cancelled() }}
    environment: dev
    env:
      KUBELOGIN_VERSION: "v0.0.25"
      KUBERNETES_CLUSTER_NAME: "${{ vars.KUBERNETES_CLUSTER_NAME }}"
      KUBERNETES_NAMESPACE: "${{ vars.KUBERNETES_NAMESPACE }}"
      KUBERNETES_MANIFEST_PATH: "${{ vars.KUBERNETES_MANIFEST_PATH }}"
      AZURE_RESOURCE_GROUP: "${{ vars.AZURE_RESOURCE_GROUP }}"
      AZURE_CONTAINER_REGISTRY: "${{ vars.AZURE_CONTAINER_REGISTRY }}"
      ENABLE_ALEMBIC_MIGRATIONS: "${{ vars.ENABLE_ALEMBIC_MIGRATIONS }}"
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4

    - name: GitHub Configuration
      run: git config --global url."https://oauth2:${{ secrets.GH_TOKEN }}@github.com".insteadOf https://github.com

    - name: Clone cicd-deployment-scripts
      run: git clone https://github.com/code-kern-ai/cicd-deployment-scripts.git

    # Install the latest version of Kubernetes CLI and configure the Kubernetes CLI configuration file with a Kubernetes Cloud user API token
    - name: Azure Cloud Login
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    # Use kubelogin to configure your kubeconfig for Azure auth
    - name: Set up kubelogin for non-interactive login
      uses: azure/use-kubelogin@v1
      with:
        kubelogin-version: ${{ env.KUBELOGIN_VERSION }}

    - uses: azure/aks-set-context@v3
      with:
        resource-group: ${{ env.AZURE_RESOURCE_GROUP }}
        cluster-name: ${{ env.KUBERNETES_CLUSTER_NAME }}
        admin: 'false'
        use-kubelogin: 'true'
    
    - name: Run Test
      shell: bash
      run: |
        bash cicd-deployment-scripts/k8s/test.sh \
          -n ${{ env.KUBERNETES_NAMESPACE }} \
          -d ${{ github.event.repository.name }} \
          -t ${{ needs.call-az-acr-push-test.outputs.GH_REF_NAME }} \
          -r ${{ env.AZURE_CONTAINER_REGISTRY }} \
          -c "${{ inputs.test_cmd }}" \
          -a "${{ env.ENABLE_ALEMBIC_MIGRATIONS }}"

  # call-k8-db-downgrade:
  #   uses: code-kern-ai/cicd-deployment-scripts/.github/workflows/k8s_db_downgrade.yml@dev
  #   needs: [call-az-acr-push-test, call-k8-db-upgrade, k8-test]
  #   if: ${{ always() && !cancelled() && (needs.call-k8-db-upgrade.outputs.ALEMBIC_CURRENT_REV != needs.call-k8-db-upgrade.outputs.ALEMBIC_UPGRADED_REV) && vars.ENABLE_ALEMBIC_MIGRATIONS == 'true' }}
  #   secrets: inherit
  #   with:
  #     alembic_downgrade_rev: ${{ needs.call-k8-db-upgrade.outputs.ALEMBIC_CURRENT_REV }}
  #     docker_image_tag: ${{ needs.call-az-acr-push-test.outputs.GH_REF_NAME }}
